{"uid":"1c1b3c7cc73567d5","name":"Создание заказа с разными цветами самоката","fullName":"tests.test_orders.TestOrders#test_order_with_different_colors","historyId":"31dbb1b7105d3daa27c8099ed5192182","time":{"start":1704541929437,"stop":1704541929471,"duration":34},"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <test_orders.TestOrders object at 0x1071a6cd0>, color = ['BLACK']\n\n    @allure.title(\"Создание заказа с разными цветами самоката\")\n    @pytest.mark.parametrize(\"color\", [[], ['BLACK'], ['GREY'], ['BLACK', 'GREY']])\n    def test_order_with_different_colors(self, color):\n        order = Order(color=color)\n        response = order.create_order()\n>       assert response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\ntests/test_orders.py:14: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 201\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <test_orders.TestOrders object at 0x1071a6cd0>, color = ['BLACK']\n\n    @allure.title(\"Создание заказа с разными цветами самоката\")\n    @pytest.mark.parametrize(\"color\", [[], ['BLACK'], ['GREY'], ['BLACK', 'GREY']])\n    def test_order_with_different_colors(self, color):\n        order = Order(color=color)\n        response = order.create_order()\n>       assert response.status_code == 201\nE       assert 500 == 201\nE        +  where 500 = <Response [500]>.status_code\n\ntests/test_orders.py:14: AssertionError","steps":[{"name":"Создать заказ","time":{"start":1704541929437,"stop":1704541929470,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"suite","value":"Тесты метода создания заказа"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestOrders"},{"name":"host","value":"Air-Sofiya.netis.cc"},{"name":"thread","value":"4734-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_orders"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"color","value":"['BLACK']"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1c1b3c7cc73567d5.json","parameterValues":["['BLACK']"]}